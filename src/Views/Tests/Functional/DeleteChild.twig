{% set childTable = false %}
{% set parentTable = false %}
{% set childName = false %}
{% set childNamePlural = false %}
{% for childTableIdentifier in data.relationships['children'].data %}
{% if childTableIdentifier.id == data.meta.childTable %}
{% set childTable = lookupIncluded('table', childTableIdentifier.id, included) %}
{% if childTable.attributes.isComplete == false %}
{% for parentTableIdentifier in childTable.relationships['parents'].data %}
{% if parentTableIdentifier.id != data.id %}
{% set parentTable = lookupIncluded('table', parentTableIdentifier.id, included) %}
{% set childName = parentTable.attributes.objectName %}
{% set childNamePlural = parentTable.attributes.objectNamePlural %}
{% set break = true %}
{% endif %}
{% endfor %}
{% else %}
{% set childName = childTable.attributes.objectName %}
{% set childNamePlural = childTable.attributes.objectNamePlural %}
{% endif %}
{% set break = true %}
{% endif %}
{% endfor %}
<?php
namespace {{ meta.namespace }}Tests\Functional\{{ data.attributes.objectNamePlural }}\{{ childTable.attributes.objectNamePlural }};

use CarloNicora\Minimalism\Enums\HttpCode;
use Exception;
use {{ meta.namespace }}Tests\Abstracts\AbstractFunctionalTest;
use {{ meta.namespace }}Tests\Data\Linknetic\{{ data.attributes.objectNamePlural }}Data;
use {{ meta.namespace }}Tests\Data\Linknetic\{{ parentTable.attributes.objectNamePlural }}Data;

class Delete{{ childTable.attributes.objectNamePlural }} extends AbstractFunctionalTest
{
    /**
     * @test
     * @return void
     * @throws Exception
     * @covers \Linknetic\Minimalism\Api\Models\{{ data.attributes.objectNamePlural }}\{{ childTable.attributes.objectNamePlural }}::delete()
     */
    public function SHOULD_Return412_WHEN_UserDeletes{{ data.attributes.objectName }}{{ childTable.attributes.objectNamePlural }}Without{{ data.attributes.primaryKeyCapitalised }}(
    ): void
    {
        /** @noinspection UnusedFunctionResultInspection */
        $this->runApiCall(
            expectedResult: HttpCode::PreconditionFailed,
        );
    }

    /**
    * @test
    * @return void
    * @throws Exception
    * @covers \Linknetic\Minimalism\Api\Models\{{ data.attributes.objectNamePlural }}\{{ childTable.attributes.objectNamePlural }}::delete()
    */
    public function SHOULD_Return412_WHEN_UserDeletes{{ data.attributes.objectName }}{{ childTable.attributes.objectNamePlural }}Without{{ childTable.attributes.primaryKeyCapitalised }}(
    ): void
    {
        /** @noinspection UnusedFunctionResultInspection */
        $this->runApiCall(
            expectedResult: HttpCode::PreconditionFailed,
            endpointParams: [{{ data.attributes.objectNamePlural }}Data::Value1->value],
        );
    }

    /**
    * @test
    * @return void
    * @throws Exception
    * @covers \Linknetic\Minimalism\Api\Models\{{ data.attributes.objectNamePlural }}\{{ childTable.attributes.objectNamePlural }}::delete()
    */
    public function SHOULD_Return404_WHEN_UserDeletes{{ data.attributes.objectName }}{{ childTable.attributes.objectNamePlural }}OnNonExisting{{ data.attributes.objectName }}(
    ): void
    {
        /** @noinspection UnusedFunctionResultInspection */
        $this->runApiCall(
            expectedResult: HttpCode::NotFound,
            endpointParams: [1000000000, 1],
        );
    }

    /**
    * @test
    * @return void
    * @throws Exception
    * @covers \Linknetic\Minimalism\Api\Models\{{ data.attributes.objectNamePlural }}\{{ childTable.attributes.objectNamePlural }}::delete()
    */
    public function SHOULD_Return404_WHEN_UserDeletes{{ data.attributes.objectName }}{{ childTable.attributes.objectNamePlural }}OnNonExisting{{ ChildTable.attributes.objectName }}(
    ): void
    {
        /** @noinspection UnusedFunctionResultInspection */
        $this->runApiCall(
            expectedResult: HttpCode::NotFound,
            endpointParams: [{{ data.attributes.objectNamePlural }}Data::Value1->value, 1000000],
        );
    }

    /**
    * @test
    * @return void
    * @throws Exception
    * @covers \Linknetic\Minimalism\Api\Models\{{ data.attributes.objectNamePlural }}\{{ childTable.attributes.objectNamePlural }}::delete()
    */
    public function SHOULD_Return203_WHEN_UserDeletes{{ data.attributes.objectName }}{{ childTable.attributes.objectNamePlural }}(
    ): void
    {
        /** @noinspection UnusedFunctionResultInspection */
        $this->runApiCall(
            expectedResult: HttpCode::NoContent,
            endpointParams: [{{ data.attributes.objectNamePlural }}Data::Value1->value, {{ parentTable.attributes.objectNamePlural }}Data::Value1->value],
        );
    }
}