<?php
namespace {{ meta.namespace }}Tests\Data\Oauth;

use CarloNicora\Minimalism\Interfaces\Sql\Interfaces\SqlDataObjectInterface;
use CarloNicora\Minimalism\Services\OAuth\Data\Tokens\Databases\TokensTable;
use CarloNicora\Minimalism\Services\OAuth\Data\Tokens\DataObjects\Token;
use CarloNicora\Minimalism\TestSuite\Interfaces\TableDataInterface;

enum TokensData: string implements TableDataInterface
{
    case DefaultToken = 'bearerDefault';
    case OtherToken = 'bearerOther';

    /**
     * @return string
     */
    public static function getTableClass(
    ): string
    {
        return TokensTable::class;
    }

    /**
     * @return SqlDataObjectInterface
     */
    public function row(
    ): SqlDataObjectInterface
    {
        return match ($this) {
            self::DefaultToken => $this->map(userId: 1),
            self::OtherToken => $this->map(userId: 2),
        };
    }

    /**
    * @param int $userId
    * @return Token
    */
    private function map(
        int $userId,
    ): Token
    {
        $response = new Token();
        $response->setToken($this->value);
        $response->setUserId($userId);
        $response->setAppId(AppsData::App1->value);
        $response->setIsUser(true);

        return $response;
    }
}