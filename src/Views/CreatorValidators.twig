<?php
namespace {{ data.attributes.namespace }}Data\{{ data.attributes.objectNamePlural }}\Validators;

use CarloNicora\Minimalism\Services\DataValidator\Abstracts\AbstractDataValidator;
use CarloNicora\Minimalism\Services\DataValidator\Objects\AttributeValidator;
use CarloNicora\Minimalism\Services\DataValidator\Objects\DocumentValidator;
use CarloNicora\Minimalism\Services\DataValidator\Objects\ResourceValidator;

class {{ data.attributes.objectName }}CreateValidator extends AbstractDataValidator
{
    /**
     *
     */
    public function __construct()
    {
        $this->documentValidator = new DocumentValidator();

        $resourceValidator = new ResourceValidator(type: '{{ data.attributes.objectNamePlural }}');
{% for fieldIdentifier in data.relationships['fields'].data %}{% set field = lookupIncluded('field', fieldIdentifier.id, included) %}{% if field.meta.isId == false%}

        $resourceValidator->addAttributeValidator(new AttributeValidator(name: '{{ field.id }}'{% if field.attributes.isNullable == false %}, isRequired: true{% endif %}));
{% endif %}{% endfor %}
        $this->documentValidator->addResourceValidator(
                validator: $resourceValidator
        );
    }
}