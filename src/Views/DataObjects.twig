<?php
namespace {{ data.attributes.namespace }}Data\{{ data.attributes.objectNamePlural }}\DataObjects;

use CarloNicora\Minimalism\Interfaces\Sql\Attributes\DbField;
use CarloNicora\Minimalism\Interfaces\Sql\Attributes\DbTable;
use {{ data.attributes.namespace }}Data\Abstracts\Abstract{{ data.attributes.project }}DataObject;
use {{ data.attributes.namespace }}Data\{{ data.attributes.objectNamePlural }}\Databases\{{ data.attributes.objectNamePlural }}Table;
use {{ data.attributes.namespace }}Enums\{{ data.attributes.project }}Dictionary;

#[DbTable(tableClass: {{ data.attributes.objectNamePlural }}Table::class)]
class {{ data.attributes.objectName }} extends Abstract{{ data.attributes.project }}DataObject
{
    /** @var {{ data.attributes.project }}Dictionary  */
    protected {{ data.attributes.project }}Dictionary $type = {{ data.attributes.project }}Dictionary::{{ data.attributes.objectName }};

{% for fieldIdentifier in data.relationships['fields'].data %}{% set field = lookupIncluded('field', fieldIdentifier.id, included) %}
    /** @var {{ field.attributes.phpType }}{% if field.attributes.isNullable == true%}|null{% endif %}  */
    #[DbField(field: {{ data.attributes.objectNamePlural }}Table::{{ field.id }})]
    protected {% if field.attributes.isNullable == true%}?{% endif %}{{ field.attributes.phpType }} ${% if field.meta.isId == true%}id{% else %}{{ field.id }}{% endif %}{% if field.attributes.isNullable == true%}=null{% endif %};

{% endfor %}

{% for fieldIdentifier in data.relationships['fields'].data %}{% set field = lookupIncluded('field', fieldIdentifier.id, included) %}{%if field.meta.isId == false%}
    /** @return {{ field.attributes.phpType }}{% if field.attributes.isNullable == true%}|null{% endif %} */
    public function get{{ field.meta.capitalisedName }}(): {% if field.attributes.isNullable == true%}?{% endif %}{{ field.attributes.phpType }}{return $this->{{field.id}};}

    /*** @param {{ field.attributes.phpType }}{% if field.attributes.isNullable == true%}|null{% endif %} ${{field.id}} */
    public function set{{ field.meta.capitalisedName }}({% if field.attributes.isNullable == true%}?{% endif %}{{ field.attributes.phpType }} ${{field.id}}): void{$this->{{field.id}} = ${{field.id}};}

{% endif %}{% endfor %}
}